'use client'

import React, { useState, useEffect } from 'react'
import { useParams, useSearchParams } from 'next/navigation'
import { RunSummary } from '@/components/execution/RunSummary'
import { Button } from '@/components/ui/Button'
import { Card, CardContent } from '@/components/ui/Card'
import { CheckCircle2, XCircle, AlertTriangle } from 'lucide-react'

export default function SharedRunSummaryPage() {
  const params = useParams()
  const searchParams = useSearchParams()
  const runId = params.runId as string
  const token = searchParams.get('token')
  const [isValidToken, setIsValidToken] = useState<boolean | null>(null)

  useEffect(() => {
    // Simple token validation (in production, use proper JWT validation)
    if (token) {
      try {
        const decoded = Buffer.from(token, 'base64').toString()
        const [tokenRunId] = decoded.split(':')
        setIsValidToken(tokenRunId === runId)
      } catch {
        setIsValidToken(false)
      }
    } else {
      setIsValidToken(false)
    }
  }, [token, runId])

  if (isValidToken === null) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
      </div>
    )
  }

  if (!isValidToken) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <Card className="w-full max-w-md">
          <CardContent className="p-6 text-center">
            <XCircle className="h-12 w-12 text-red-500 mx-auto mb-4" />
            <h1 className="text-xl font-semibold text-gray-900 mb-2">Access Denied</h1>
            <p className="text-gray-600 mb-4">
              This shared link is invalid or has expired.
            </p>
            <Button onClick={() => window.close()}>Close</Button>
          </CardContent>
        </Card>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Simple header for shared view */}
      <div className="bg-white border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center space-x-3">
              <div className="h-8 w-8 bg-primary-600 rounded-lg flex items-center justify-center">
                <CheckCircle2 className="h-5 w-5 text-white" />
              </div>
              <h1 className="text-lg font-semibold text-gray-900">Test Case Manager</h1>
            </div>
            <div className="text-sm text-gray-500">
              Shared Test Run Summary
            </div>
          </div>
        </div>
      </div>

      {/* Main content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="mb-6">
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <div className="flex items-center">
              <CheckCircle2 className="h-5 w-5 text-blue-600 mr-2" />
              <p className="text-blue-800 text-sm">
                This is a read-only shared summary. No actions can be performed from this view.
              </p>
            </div>
          </div>
        </div>

        <RunSummary
          runId={runId}
          // Remove action handlers for read-only view
          onRerunFailed={undefined}
          onNavigateToRun={undefined}
        />

        {/* Footer */}
        <div className="mt-12 pt-6 border-t border-gray-200 text-center text-sm text-gray-500">
          <p>Generated by Test Case Manager â€¢ {new Date().toLocaleString()}</p>
        </div>
      </div>
    </div>
  )
}